openapi: 3.0.3

info:
  title: Onboarding API
  version: 1.0.1
  description: STD22028
servers:
  - url: https://std22028.com/api/v1

tags:
  - name: Students

paths:
  /students:
    get:
      tags:
        - Students
      summary: Show the student
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
          
    post:
      tags:
        - Students
      summary: Add a new student
      requestBody:
        description: Create a new student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
    
    put:
      tags:
        - Students
      summary: Update a student
      operationId: updateStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '405':
          description: Invalid input
          
    delete:
      tags:
        - Students
      summary: Delete a student
      description: delete a student
      operationId: deleteStudent
      parameters: 
        - name: studentId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            example: 1
            
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid student value

components:
  schemas:
    Student:
      type: object
      properties:
        studentId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          format: int64
          example: Rakoto
        birthdate:
          type: string
          format: date
          example: '2000-01-01'
