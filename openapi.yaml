openapi: 3.0.3

info:
  title: Onboarding API
  version: 1.0.1
  description: STD22028
servers:
  - url: https://std22028.com/api/v1

tags:
  - name: Students

paths:
  /students:
    get:
      tags:
        - Students
      summary: Show the students
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
          
    post:
      tags:
        - Students
      summary: Add a new student
      requestBody:
        description: Create a new student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
    
    put:
      tags:
        - Students
      summary: Update a student
      operationId: updateStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '405':
          description: Invalid input
          
    delete:
      tags:
        - Students
      summary: Delete a student
      description: delete a student
      operationId: deleteStudent
      parameters: 
        - name: studentId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid student value

  /teachers:
    get:
      tags:
        - Teachers
      summary: Show the teachers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '500':
          description: Internal Server Error
          
    post:
      tags:
        - Teachers
      summary: Add a new teacher
      requestBody:
        description: Create a new teacher
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '500':
          description: Internal Server Error
    
    put:
      tags:
        - Teachers
      summary: Update a teacher
      operationId: updateTeacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Teacher'
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '405':
          description: Invalid input
          
    delete:
      tags:
        - Teachers
      summary: Delete a teacher
      description: delete a teacher
      operationId: deleteTeacher
      parameters: 
        - name: teacherId
          in: query
          required: true
          schema:
            type: integer
            format: int64
            example: 1
            
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid teacher value

components:
  schemas:
    Student:
      type: object
      properties:
        studentId:
          type: integer
          format: int64
          example: 22028
        name:
          type: string
          format: int64
          example: Andy Nekena
        birthdate:
          type: string
          format: date
          example: '2005-05-02'
    Teacher:
      type: object
      properties:
        teacherId:
          type: integer
          format: int64
          example: 21001
        name:
          type: string
          format: int64
          example: Tokimahery
        birthdate:
          type: string
          format: date
          example: '1993-10-4'
        course:
          type: array
          items:
            type: object
            properties:
              courseName:
                type: string
                format: int64
              courseCode:
                type: string
                format: int64
              duration:
                type: integer
                format: int32
            example: 
              - courseName: Algorithmique
                courseCode: PROG1
                duration: 60
              - courseName: Bases de données structurées
                courseCode: DONNEES1
                duration: 60